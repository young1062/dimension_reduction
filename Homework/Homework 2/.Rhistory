for (i in 1:PCA.digits$n.obs){
digits.approx[i,] <- xbar # add the center to each row
}
digits.approx <- digits.approx + Y[,1:k] %*% t(W)[1:k,]
par(mfcol=c(6,6))
par(mar=c(0, 0, 3, 0), xaxs='i', yaxs='i')
for (idx in 1:36) {
im <- matrix(digits.approx[idx, ], ncol = 28, nrow = 28)
image(1:28, 1:28, im,
xaxt='n', yaxt='n')
}
k <- 5
xbar <- PCA.digits$center
W <- PCA.digits$loadings
Y <- PCA.digits$scores
digits.approx <- matrix(NA, nrow = PCA.digits$n.obs, ncol = 28^2)
for (i in 1:PCA.digits$n.obs){
digits.approx[i,] <- xbar # add the center to each row
}
digits.approx <- digits.approx + Y[,1:k] %*% t(W)[1:k,]
par(mfcol=c(6,6))
par(mar=c(0, 0, 3, 0), xaxs='i', yaxs='i')
for (idx in 1:36) {
im <- matrix(digits.approx[idx, ], ncol = 28, nrow = 28)
image(1:28, 1:28, im,
xaxt='n', yaxt='n')
}
for (i in 1:PCA.digits$n.obs){
digits.approx[i,] <- xbar # add the center to each row
}
digits.approx <- digits.approx + Y[,1:k] %*% t(W)[1:k,]
par(mfcol=c(6,6))
par(mar=c(0, 0, 3, 0), xaxs='i', yaxs='i')
for (idx in 1:36) {
im <- matrix(digits.approx[idx, ], ncol = 28, nrow = 28)
image(1:28, 1:28, im,
xaxt='n', yaxt='n')
}
k <- 25;
for (i in 1:PCA.digits$n.obs){
digits.approx[i,] <- xbar # add the center to each row
}
digits.approx <- digits.approx + Y[,1:k] %*% t(W)[1:k,]
par(mfcol=c(6,6))
par(mar=c(0, 0, 3, 0), xaxs='i', yaxs='i')
for (idx in 1:36) {
im <- matrix(digits.approx[idx, ], ncol = 28, nrow = 28)
image(1:28, 1:28, im,
xaxt='n', yaxt='n')
}
k <- 50;
for (i in 1:PCA.digits$n.obs){
digits.approx[i,] <- xbar # add the center to each row
}
digits.approx <- digits.approx + Y[,1:k] %*% t(W)[1:k,]
par(mfcol=c(6,6))
par(mar=c(0, 0, 3, 0), xaxs='i', yaxs='i')
for (idx in 1:36) {
im <- matrix(digits.approx[idx, ], ncol = 28, nrow = 28)
image(1:28, 1:28, im,
xaxt='n', yaxt='n')
}
expression("Variance, \lambda"[d])
plot(1:784, PCA.digits$sdev^2,
type = 'l',
xlab = "Principal Component, d",
ylab = expression("Variance, \lambda"[d])
plot(1:784, PCA.digits$sdev^2,
type = 'l',
xlab = "Principal Component, d",
ylab = expression("Variance, lambda"[d])
plot(1:784, PCA.digits$sdev^2,
type = 'l',
xlab = "Principal Component, d",
ylab = expression("Variance, lambda"[d]))
plot(1:784, PCA.digits$sdev^2,
type = 'l',
xlab = "Principal Component, d",
ylab = expression(paste("Variance,",lambda[d]))
plot(1:784, PCA.digits$sdev^2,
type = 'l',
xlab = "Principal Component, d",
ylab = expression(paste("Variance,",lambda[d])))
plot(1:784, PCA.digits$sdev^2,
type = 'l',
xlab = "Principal Component, d",
ylab = expression(paste("Variance, ",lambda[d])))
plot(1:784, cumsum(PCA.digits$sdev^2)/sum(PCA.digits$sdev^2),
type = 'l',
xlab = "Principal Component, d",
ylab = "Cumulative Variance"")
plot(1:784, cumsum(PCA.digits$sdev^2)/sum(PCA.digits$sdev^2),
type = 'l',
xlab = "Principal Component, d",
ylab = "Cumulative Variance)
plot(1:784, cumsum(PCA.digits$sdev^2)/sum(PCA.digits$sdev^2),
type = 'l',
xlab = "Principal Component, d",
ylab = "Cumulative Variance")
View(cumsum(PCA.digits$sdev^2)/sum(PCA.digits$sdev^2))
plot(1:784, cumsum(PCA.digits$sdev^2)/sum(PCA.digits$sdev^2),
type = 'l',
xlab = "Principal Component, d",
ylab = "Cumulative Variance")
hline(0.9)
plot(1:784, cumsum(PCA.digits$sdev^2)/sum(PCA.digits$sdev^2),
type = 'l',
xlab = "Principal Component, d",
ylab = "Cumulative Variance")
abline(h = 0.9)
plot(1:784, cumsum(PCA.digits$sdev^2)/sum(PCA.digits$sdev^2),
type = 'l',
xlab = "Principal Component, d",
ylab = "Cumulative Variance")
abline(h = 0.9, v = 0.61)
plot(1:784, cumsum(PCA.digits$sdev^2)/sum(PCA.digits$sdev^2),
type = 'l',
xlab = "Principal Component, d",
ylab = "Cumulative Variance")
abline(h = 0.9, v = 61)
plot(1:784, cumsum(PCA.digits$sdev^2)/sum(PCA.digits$sdev^2),
type = 'l',
xlab = "Principal Component, d",
ylab = "Cumulative Variance")
abline(h = 0.9, v = 61, col="red", lwd=3, lty=2)
plot(1:784, cumsum(PCA.digits$sdev^2)/sum(PCA.digits$sdev^2),
type = 'l',
xlab = "Principal Component, d",
ylab = "Cumulative Variance")
abline(h = 0.9, v = 61, col="red", lwd=1, lty=2)
load(file = "~/Documents/Teaching/Dimension Reduction - Fall 2019/Datasets/digits.Rdata")
data01 <- digits$pixels[digits$labels <=1, ]
dim(data01)
PCA.digits <- princomp(data01)
df <- data.frame(x = PCA.digits$scores[,1], y = PCA.digits$scores[,2], labels = digits$labels[digits$ labels <= 1])
library(ggplot2)
ggplot(df, aex(x=x, y=y, group = label)) + geom_point()
ggplot(df, aes(x=x, y=y, group = label)) + geom_point()
ggplot(df, aes(x=x, y=y, group = labels)) + geom_point()
ggplot(df, aes(x=x, y=y, group = labels)) + geom_point(aes(color = group))
ggplot(df, aes(x=x, y=y, group = labels)) + geom_point(aes(color = labels))
data01 <- digits$pixels[digits$labels <=2, ]
PCA.digits <- princomp(data01)
df <- data.frame(x = PCA.digits$scores[,1], y = PCA.digits$scores[,2], labels = digits$labels[digits$ labels <= 2])
ggplot(df, aes(x=x, y=y, group = labels)) + geom_point(aes(color = labels))
ggplot(df, aes(x=x, y=y, group = labels)) + geom_bin2d(aes(color = labels))
ggplot(df, aes(x=x, y=y, group = labels)) + geom_point(aes(color = labels))
ggplot(df, aes(x=x, y=y, group = labels)) + geom_point(aes(color = labels, alpha = 0.4))
ggplot(df, aes(x=x, y=y, group = labels)) + geom_point(aes(color = labels, alpha = 0.1))
ggplot(df, aes(x=x, y=y, group = labels)) + geom_point(aes(color = labels) alpha = 0.2)
ggplot(df, aes(x=x, y=y, group = labels)) + geom_point(aes(color = labels), alpha = 0.2)
plot(1:784, PCA.digits$sdev^2)
PCA.digits <- princomp(digits$pixels)
plot(1:784, PCA.digits$sdev^2)
library(plotly)
plot_ly(data.frame( x = PCA.digits$scores[,1], PCA.digits$scores= data[,2], PCA.digits$scores = data[,3], label = digits$labels),
x = ~x, y = ~y, z = ~z,
marker = list(size = 5)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>", range = c(-7, 7)),
yaxis = list(title = "x<sub>2</sub>", range = c(-7, 7)),
zaxis = list(title = "x<sub>3</sub>", range = c(-7, 7)))
)
df<- data.frame( x = PCA.digits$scores[,1], PCA.digits$scores= data[,2], PCA.digits$scores = data[,3], label = digits$labels)
df<- data.frame( x = PCA.digits$scores[,1], y= PCA.digits$scores, z =PCA.digits$scores, label = digits$labels)
plot_ly(df,
x = ~x, y = ~y, z = ~z,
marker = list(size = 5)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>", range = c(-7, 7)),
yaxis = list(title = "x<sub>2</sub>", range = c(-7, 7)),
zaxis = list(title = "x<sub>3</sub>", range = c(-7, 7)))
)
df<- data.frame( x = PCA.digits$scores[,1], y= PCA.digits$scores[,2], z =PCA.digits$scores[,3], label = digits$labels)
plot_ly(df,
x = ~x, y = ~y, z = ~z,
marker = list(size = 5)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>", range = c(-7, 7)),
yaxis = list(title = "x<sub>2</sub>", range = c(-7, 7)),
zaxis = list(title = "x<sub>3</sub>", range = c(-7, 7)))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z,
marker = list(size = 5)) %>%
add_markers(color = label) %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>", range = c(-7, 7)),
yaxis = list(title = "x<sub>2</sub>", range = c(-7, 7)),
zaxis = list(title = "x<sub>3</sub>", range = c(-7, 7)))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z,
marker = list(size = 5,color = label)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>", range = c(-7, 7)),
yaxis = list(title = "x<sub>2</sub>", range = c(-7, 7)),
zaxis = list(title = "x<sub>3</sub>", range = c(-7, 7)))
)
df<- data.frame( x = PCA.digits$scores[1:500,1], y= PCA.digits$scores[1:500,2], z =PCA.digits$scores[1:500,3], label = digits$labels)
plot_ly(df,
x = ~x, y = ~y, z = ~z,
marker = list(size = 5)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>", range = c(-7, 7)),
yaxis = list(title = "x<sub>2</sub>", range = c(-7, 7)),
zaxis = list(title = "x<sub>3</sub>", range = c(-7, 7)))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z,
marker = list(size = 5)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>"),
yaxis = list(title = "x<sub>2</sub>"),
zaxis = list(title = "x<sub>3</sub>"))
))
plot_ly(df,
x = ~x, y = ~y, z = ~z,
marker = list(size = 5)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>"),
yaxis = list(title = "x<sub>2</sub>"),
zaxis = list(title = "x<sub>3</sub>"))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z, colors = labels,
marker = list(size = 5)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>"),
yaxis = list(title = "x<sub>2</sub>"),
zaxis = list(title = "x<sub>3</sub>"))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z, colors = labels,
marker = list(size = 1)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>"),
yaxis = list(title = "x<sub>2</sub>"),
zaxis = list(title = "x<sub>3</sub>"))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z,
marker = list(size = 3)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>"),
yaxis = list(title = "x<sub>2</sub>"),
zaxis = list(title = "x<sub>3</sub>"))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z, colors = colorRamp(labels),
marker = list(size = 1)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>"),
yaxis = list(title = "x<sub>2</sub>"),
zaxis = list(title = "x<sub>3</sub>"))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z, colors = 'labels'YlOrRd, color = ~labels
marker = list(size = 1)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>"),
yaxis = list(title = "x<sub>2</sub>"),
zaxis = list(title = "x<sub>3</sub>"))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z, colors = 'labels'YlOrRd, color = ~labels,
marker = list(size = 1)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>"),
yaxis = list(title = "x<sub>2</sub>"),
zaxis = list(title = "x<sub>3</sub>"))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z, color = ~labels,
marker = list(size = 1)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>"),
yaxis = list(title = "x<sub>2</sub>"),
zaxis = list(title = "x<sub>3</sub>"))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z, colors = colorRamp(~labels),
marker = list(size = 1)) %>%
add_markers() %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>"),
yaxis = list(title = "x<sub>2</sub>"),
zaxis = list(title = "x<sub>3</sub>"))
)
plot_ly(df,
x = ~x, y = ~y, z = ~z,
marker = list(size = 1)) %>%
add_markers(color = ~labels) %>%
layout(scene = list( xaxis = list(title = "x<sub>1</sub>"),
yaxis = list(title = "x<sub>2</sub>"),
zaxis = list(title = "x<sub>3</sub>"))
)
plot_ly(df, x = ~x, y = ~y, z = ~z, marker = list(size = 1))
p <- plot_ly(df, x = ~x, y = ~y, z = ~z, marker = list(size = 1))
add_markers(p, color = ~labels)
add_markers(p, symbol = ~labels)
df<- data.frame( x = PCA.digits$scores[,1], y= PCA.digits$scores[,2], z =PCA.digits$scores[,3], label = digits$labels)
plot_ly(df, x = ~x, y = ~y, z = ~z, marker = list(size = 1))
PCA.digits <- princomp(digits$pixels, scale = TRUE, center = TRUE)
PCA.digits <- princomp(digits$pixels, cor = TRUE)
cor(PCA.digits)
cor(PCA.digits$pixels)
cor(digits$pixels)
C <- cor(digits$pixels)
dim(C)
diag(C)
min(diag(C))
PCA.digits <- princomp(digits$pixels, cor = TRUE)
PCA.digits <- princomp(data01, cor = TRUE)
PCA.digits <- prcomp(data01, scale = TRUE)
PCA <- princomp(digits$pixels)
plot(PCA$scores[,1], PCA$scores[,2])
plot(PCA$scores[,1], PCA$scores[,2],
col = c("red", "orange", "yellow", "green", "blue", "purple", "black", "grey", "brown", "cyan")[digits$labels]))
plot(PCA$scores[,1],PCA$scores[,2],
col = c("red", "orange", "yellow", "green", "blue", "purple", "black", "grey", "brown", "cyan")[digits$labels])
require("MASS")
X <- mvrnorm(N = 1e3)
X <- mvrnorm(n = 1e3)
X <- mvrnorm(n = 1e3, mu = c(0,0), )
X <- mvrnorm(n = 1e3, mu = c(0,0), Sigma = diag(c(1,1)))
plot(X[,1],X[,2])
PCA <- princomp(X)
head(PCA$loadings)
PCA$loadings
summary(PCA)
print(PCA)
X <- cbind(X,c(10000,10000))
View(df)
X <- mvrnorm(n = 1e3, mu = c(0,0), Sigma = diag(c(1,1)))
X <- rbind(X,c(10000,10000))
PCA <- princomp(X)
PCA$
loadings()
PCA$loadings
X <- mvrnorm(n = 1e3, mu = c(0,0), Sigma = diag(c(1,2)))
PCA <- princomp(X)
PCA$loadings
X <- rbind(X,c(10000,10000))
PCA <- princomp(X)
X <- rbind(X,c(10000,10000))
PCA$loadings
X <- mvrnorm(n = 1e3, mu = c(0,0), Sigma = diag(c(1,2)))
X <- rbind(X,c(10000,10000))
X <- scale(X)
PCA <- princomp(X)
PCA$loadings
mtcars
summary(cars)
dim(mtcars)
PCA <- princomp(mtcars)
temp <- mtcars
mtcar$mpg <- 5280*mtcars$mpg
mtcars$mpg <- 5280*mtcars$mpg
mtcars
PCA <- mtcars
PCA <- princomp(mtcars)
PCA$loadings
PCA <- princomp(digits$pixels)
rm(df, p, PCA, PCA.digits,temp, X11())
rm(df, p, PCA, PCA.digits,temp, X
)
rm(data01)
rm(C)
problem8 <- matrix(0, nrow = 100, ncol = 3)
for (t in 1:100){ matrix[i,] <- c(sin(2*pi*t),cos(2*pi(t)),(t-50)/100)}
for (t in 1:100){ matrix[i,] <- c(sin(2*pi*t),cos(2*pi*t),(t-50)/100)}
for (t in 1:100){ matrix[t,] <- c(sin(2*pi*t),cos(2*pi*t),(t-50)/100)}
c(sin(2*pi*t),cos(2*pi*t),(t-50)/100)
for (t in 1:100){ problem8[t,] <- c(sin(2*pi*t),cos(2*pi*t),(t-50)/100)}
rm(matrix,t)
plot_ly(data.frame(x = problem8[,1],
y = problem8[,2],
z = problem8[,3]),
x = ~x, y = ~y, z = ~z)
View(problem8)
for (t in 1:100){ problem8[t,] <- c(sin(2*pi*t/25),cos(2*pi*t/25),(t-50)/100)}
plot_ly(data.frame(x = problem8[,1],
y = problem8[,2],
z = problem8[,3]),
x = ~x, y = ~y, z = ~z)
plot_ly(data.frame(x = problem8[,1],
y = problem8[,2],
z = problem8[,3]),
x = ~x, y = ~y, z = ~z)
plot_ly(data.frame(x = problem8[,1],
y = problem8[,2],
z = problem8[,3]),
x = ~x, y = ~y, z = ~z, lty = 'l')
plot_ly(data.frame(x = problem8[,1],
y = problem8[,2],
z = problem8[,3]),
x = ~x, y = ~y, z = ~z, lty = 'l')
problem8 <- matrix(0, nrow = 200, ncol = 3)
for (t in 1:200){ problem8[t,] <- c(sin(2*pi*t/50),cos(2*pi*t/50),(t-100)/200)}
plot_ly(data.frame(x = problem8[,1],
y = problem8[,2],
z = problem8[,3]),
x = ~x, y = ~y, z = ~z)
plot_ly(data.frame(x = problem8[,1],
y = problem8[,2],
z = problem8[,3]),
x = ~x, y = ~y, z = ~z) %>%
add_markers()
rm(t)
Q <- svd(matrix(rnorm(n=200^2),ncol = 200))
Q <- svd(matrix(rnorm(n=200^2),ncol = 200))$u[,25]
Q %*% t(Q)
t(Q) %*% Q
Q <- svd(matrix(rnorm(n=200^2),ncol = 200))$u[,25]
Q <- svd(matrix(rnorm(n=200^2),ncol = 200))
Q <- svd(matrix(rnorm(n=200^2),ncol = 200))$u[,1:25]
t(Q) %*% Q
lam2 <- 10; sig2 <- 0.5;
problem2 <- Q %*% matrix(rnorm(n = 200*5000, sd = sqrt(lam2)))
problem2 <- Q %*% matrix(rnorm(n = 200*5000, sd = sqrt(lam2)),nrow = 200)
dim(matrix(rnorm(n = 200*5000, sd = sqrt(lam2)),nrow = 200))
dim(matrix(rnorm(n = 25*5000, sd = sqrt(lam2)),nrow = 25))
problem2 <- Q %*% matrix(rnorm(n = 25*5000, sd = sqrt(lam2)),nrow = 25)
problem2 <- problem2 + matrix(rnorm(200*5000,sd = sqrt(sig2)),nrow = 200)
PCA <- princomp(problem2)
problem2 <- t(problem2)
PCA <- princomp(problem2)
plot(1:200, PCA$sdev^2)
mean(PCA$sdev^2[26:200])
mean(PCA$sdev[26:200]^2)
rm(Q,lam2,sig2)
getwd()
setwd("~/Documents/Teaching/Dimension Reduction - Fall 2019/Homework/Homework 2/")
save("pset2.Rdata")
save.image("pset2.Rdata")
library("scatterplot3d", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
getwd()
prcomp(matrix(rnorm(500*1e4),nrow = 1e4))
temp <- prcomp(matrix(rnorm(500*1e4),nrow = 1e4))
plot(temp$sdev^2)
dim(matrix(rnorm(500*1e4),nrow = 1e4))
X <- matrix(rnorm(500*1e4),nrow = 1e4)
SIG <- t(X) %*% X/1e4
temp <- eigen(SIG)
rm(SIG, temp, X)
PCA <- princomp(digits, cor = TRUE)
PCA <- princomp(digits$pixels, cor = TRUE)
problem9 <- problem8
rm(problem8)
save.image("pset2.Rdata")
plot(PCA)
PCA <- princomp(digits$pixels, cor = FALSE)
plot(PCA)
plot(PCA$scores[,1],PCA$scores[,2],
col = c("red", "orange", "yellow", "green", "blue", "purple", "black", "grey", "brown", "cyan")[digits$labels])
PCA <- princomp(digits$pixels, cor = TRUE)
PCA <- princomp(mtcars, cor = TRUE)
plot(PCA)
PCA <- princomp(mtcars, cor = FALSE)
plot(PCA)
mtcars$mpg <- mtcars$mpg/5280
rm(PCA)
save.image(file = "pset2.Rdata")
temp <- mtcars
temp$mpg <- 5280*temp$mpg
PCA <- princomp(temp)
plot(PCA)
biplot(PCA)
N = 1000;
N <- N;
N <- 1000;
N <- 1000; d<- 50; X <- matrix(0,ncol=d, nrow = N);
for (n in 1:N){z <- runif(1); for (k in 1:d){ X[n,k] <- z^k    }}
PCA <- princomp
PCA <- princomp(X)
plot(PCA)
View(X)
biplot(PCA)
for (n in 1:N){z <- rnorm(1); for (k in 1:d){ X[n,k] <- z^k    }}
PCA <- princomp(X)
plot(PCA)
biplot(PCA)
for (n in 1:N){z <- runif(1); for (k in 1:d){ X[n,k] <- z^k    }}
warning()
warnings()
for (n in 1:N){z <- runif(1); for (k in 1:d){ X[n,k] <- z^k    }}
PCA <- princomp(X)
print(PCA)
plot(PCA)
PCA$sdev^2
biplot(PCA)
biplot(PCA, cex = rep(par("cex"), 2))
X <- X + matrix(0.001*rnorm(N*d), ncol = N)
X <- X + matrix(0.001*rnorm(N*d), nrow = N)
PCA <- princomp(X)
plot(PCA)
biplot(PCA)
X <- X + matrix(0.1*rnorm(N*d), nrow = N)
PCA <- princomp(X)
biplot(PCA)
version
PCA.p2 <- princomp(problem2)
plot(PCA.p2$sdev^2,
xlab = "Component",
ylab = expression(paste("Variance", lambda, [k]))
plot(PCA.p2$sdev^2,
xlab = "Principal Component, k",
ylab = expression(paste("Variance, ",lambda[k])))
View(PCA.p2)
View(PCA.p2$sdev^2)
mean(PCA.p2$sdev[26:200]^2)
`r mean(PCA.p2$sdev[1:25]^2)`
round(mean(PCA.p2$sdev[1:25]^2),2)
